# Generated by Django 5.2.5 on 2025-09-04 06:51

import api.models_academics
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('orgs', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('order', models.PositiveIntegerField(default=0)),
                ('published', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('code', models.CharField(blank=True, default='', max_length=50)),
                ('paper_no', models.CharField(blank=True, max_length=20)),
                ('level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='orgs.level')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LessonAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('PDF', 'PDF'), ('VIDEO', 'VIDEO'), ('RECORDING', 'RECORDING')], max_length=20)),
                ('file', models.FileField(blank=True, null=True, upload_to=api.models_academics.asset_upload_to)),
                ('storage_key', models.CharField(blank=True, default='', max_length=500)),
                ('ready', models.BooleanField(default=False)),
                ('duration_seconds', models.PositiveIntegerField(default=0)),
                ('size_bytes', models.BigIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assets', to='api.lesson')),
                ('org', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='orgs.org')),
            ],
        ),
        migrations.CreateModel(
            name='LiveSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('channel_name', models.CharField(max_length=200, unique=True)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('duration_minutes', models.PositiveIntegerField(default=60)),
                ('max_participants', models.PositiveIntegerField(default=20)),
                ('recording_enabled', models.BooleanField(default=False)),
                ('org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orgs.org')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='live_session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.livesession'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('total_seconds', models.PositiveIntegerField(default=0)),
                ('org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orgs.org')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendance', to='api.livesession')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('order', models.PositiveIntegerField(default=0)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='modules', to='api.course')),
            ],
            options={
                'ordering': ['order', 'id'],
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='api.module'),
        ),
        migrations.CreateModel(
            name='SeatReservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.CharField(choices=[('PENDING', 'PENDING'), ('CONFIRMED', 'CONFIRMED'), ('RELEASED', 'RELEASED')], default='CONFIRMED', max_length=10)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='orgs.org')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seats', to='api.livesession')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seat_reservations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['level', 'title'], name='api_course_level_i_8f989f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('level', 'code')},
        ),
        migrations.AddIndex(
            model_name='lessonasset',
            index=models.Index(fields=['org', 'lesson', 'type', 'ready'], name='asset_ready_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='attendance',
            unique_together={('org', 'session', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='module',
            unique_together={('course', 'title')},
        ),
        migrations.AlterUniqueTogether(
            name='lesson',
            unique_together={('module', 'title')},
        ),
        migrations.AlterUniqueTogether(
            name='seatreservation',
            unique_together={('org', 'session', 'user')},
        ),
    ]
